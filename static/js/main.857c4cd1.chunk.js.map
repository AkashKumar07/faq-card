{"version":3,"sources":["assets/images/bgDesktop.svg","assets/images/bgMobile.svg","assets/images/womanDesktop.svg","assets/images/womanMobile.svg","assets/images/box.svg","assets/images/arrowDown.svg","components/Accordian.js","components/Card.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Accordian","props","q","a","useState","view","setView","node","useRef","useEffect","document","addEventListener","handleClick","removeEventListener","e","current","contains","target","className","onClick","ref","src","arrow","alt","faqs","Card","womanMobile","bgMobile","bgDesktop","womanDesktop","box","map","faq","index","key","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"gFAAAA,EAAOC,QAAU,IAA0B,uC,gBCA3CD,EAAOC,QAAU,IAA0B,sC,gBCA3CD,EAAOC,QAAU,IAA0B,0C,gBCA3CD,EAAOC,QAAU,IAA0B,yC,gBCA3CD,EAAOC,QAAU,IAA0B,iC,gBCA3CD,EAAOC,QAAU,IAA0B,uC,uQCuD5BC,EApDG,SAACC,GAAW,IACpBC,EAASD,EAATC,EAAGC,EAAMF,EAANE,EADgB,EAEHC,oBAAS,GAFN,mBAEpBC,EAFoB,KAEdC,EAFc,KAKrBC,EAAOC,mBAEbC,qBAAU,WAIR,OAFAC,SAASC,iBAAiB,YAAaC,GAEhC,WACLF,SAASG,oBAAoB,YAAaD,MAE3C,IAEH,IAAMA,EAAc,SAACE,GACfP,EAAKQ,QAAQC,SAASF,EAAEG,SAK5BX,GAAQ,IAGV,OACE,yBAAKY,UAAU,YAAYC,QAAS,kBAAMb,GAASD,IAAOe,IAAKb,GAC7D,yBAAKW,UAAU,uBACb,uBACEA,UACGb,EAEG,6BADA,iCAILH,GAEH,yBACEmB,IAAKC,IACLC,IAAI,QACJL,UAAWb,EAAO,eAAiB,WAGtCA,EACC,yBAAKa,UAAU,qBACb,2BAAIf,IAEJ,OCxCJqB,EAAO,CACX,CAAEtB,EAAG,sCAAuCC,EAAG,uBAC/C,CACED,EAAG,wCACHC,EACE,qFAEJ,CACED,EAAG,8BACHC,EACE,+EAEJ,CACED,EAAG,gCACHC,EAAG,iDAEL,CACED,EAAG,qCACHC,EAAG,uDAgCQsB,EA5BF,WACX,OACE,yBAAKP,UAAU,QACb,yBAAKA,UAAU,sBACb,yBAAKG,IAAKK,IAAaH,IAAI,aAC3B,yBAAKF,IAAKM,IAAUJ,IAAI,gBAE1B,yBAAKL,UAAU,eACb,yBAAKA,UAAU,yBACb,yBAAKG,IAAKO,IAAWL,IAAI,QAE3B,yBAAKL,UAAU,4BACb,yBAAKG,IAAKQ,IAAcN,IAAI,mBAE9B,yBAAKF,IAAKS,IAAKP,IAAI,MAAML,UAAU,qBAErC,yBAAKA,UAAU,aACb,mCACCM,EAAKO,KAAI,SAACC,EAAKC,GAAN,OACR,yBAAKC,IAAKD,GACR,kBAAC,EAAD,CAAW/B,EAAG8B,EAAI9B,EAAGC,EAAG6B,EAAI7B,WCxCzBgC,MARf,WACE,OACE,yBAAKjB,UAAU,cACb,kBAAC,EAAD,QCKckB,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFjC,SAASkC,eAAe,SDyHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,c","file":"static/js/main.857c4cd1.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/bgDesktop.a2580ee9.svg\";","module.exports = __webpack_public_path__ + \"static/media/bgMobile.40d8475d.svg\";","module.exports = __webpack_public_path__ + \"static/media/womanDesktop.44e30650.svg\";","module.exports = __webpack_public_path__ + \"static/media/womanMobile.daf66934.svg\";","module.exports = __webpack_public_path__ + \"static/media/box.a7ef46ea.svg\";","module.exports = __webpack_public_path__ + \"static/media/arrowDown.ba0110cb.svg\";","import React, { useState, useEffect, useRef } from \"react\";\r\nimport arrow from \"../assets/images/arrowDown.svg\";\r\n\r\nconst Accordian = (props) => {\r\n  const { q, a } = props;\r\n  const [view, setView] = useState(false);\r\n\r\n  //detect click outside the component\r\n  const node = useRef();\r\n\r\n  useEffect(() => {\r\n    // add when mounted\r\n    document.addEventListener(\"mousedown\", handleClick);\r\n    // return function to be called when unmounted\r\n    return () => {\r\n      document.removeEventListener(\"mousedown\", handleClick);\r\n    };\r\n  }, []);\r\n\r\n  const handleClick = (e) => {\r\n    if (node.current.contains(e.target)) {\r\n      // inside click\r\n      return;\r\n    }\r\n    // outside click\r\n    setView(false);\r\n  };\r\n\r\n  return (\r\n    <div className=\"accordian\" onClick={() => setView(!view)} ref={node}>\r\n      <div className=\"accordian__question\">\r\n        <p\r\n          className={\r\n            !view\r\n              ? \"accordian__question-notActive\"\r\n              : \"accordian__question-active\"\r\n          }\r\n        >\r\n          {q}\r\n        </p>\r\n        <img\r\n          src={arrow}\r\n          alt=\"arrow\"\r\n          className={view ? \"arrow-active\" : \"arrow\"}\r\n        />\r\n      </div>\r\n      {view ? (\r\n        <div className=\"accordian__answer\">\r\n          <p>{a}</p>\r\n        </div>\r\n      ) : null}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Accordian;\r\n","import React from \"react\";\r\n\r\nimport bgDesktop from \"../assets/images/bgDesktop.svg\";\r\nimport bgMobile from \"../assets/images/bgMobile.svg\";\r\nimport womanDesktop from \"../assets/images/womanDesktop.svg\";\r\nimport womanMobile from \"../assets/images/womanMobile.svg\";\r\nimport box from \"../assets/images/box.svg\";\r\n\r\nimport Accordian from \"./Accordian\";\r\n\r\nconst faqs = [\r\n  { q: \"How many team members can I invite?\", a: \"maximum 10 members.\" },\r\n  {\r\n    q: \"What is the maximum file upload size?\",\r\n    a:\r\n      \"No more than 2GB. All files in your account must fit your allocated storage space\",\r\n  },\r\n  {\r\n    q: \"How do I reset my password?\",\r\n    a:\r\n      \"Go to profile, then settings. You will find an option called reset password\",\r\n  },\r\n  {\r\n    q: \"Can I cancel my subscription?\",\r\n    a: \"Yes, you can cancel your subscription anytime\",\r\n  },\r\n  {\r\n    q: \"Do you provide additional support?\",\r\n    a: \"Yes, our customer care services are available 24/7\",\r\n  },\r\n];\r\n\r\nconst Card = () => {\r\n  return (\r\n    <div className=\"card\">\r\n      <div className=\"card__image-mobile\">\r\n        <img src={womanMobile} alt=\"mobilebg\" />\r\n        <img src={bgMobile} alt=\"backgrounf\" />\r\n      </div>\r\n      <div className=\"card__image\">\r\n        <div className=\"card__image-bgDesktop\">\r\n          <img src={bgDesktop} alt=\"bg\" />\r\n        </div>\r\n        <div className=\"card__image-womenDesktop\">\r\n          <img src={womanDesktop} alt=\"women desktop\" />\r\n        </div>\r\n        <img src={box} alt=\"box\" className=\"card__image-box\" />\r\n      </div>\r\n      <div className=\"card__faq\">\r\n        <h1>FAQ</h1>\r\n        {faqs.map((faq, index) => (\r\n          <div key={index}>\r\n            <Accordian q={faq.q} a={faq.a} />\r\n          </div>\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Card;\r\n","import React from \"react\";\nimport \"./styles/App.scss\";\nimport Card from \"./components/Card\";\n\nfunction App() {\n  return (\n    <div className=\"background\">\n      <Card />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}